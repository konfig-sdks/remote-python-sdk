# coding: utf-8

"""
    Remote API

    Talent is everywhere. Opportunity is not. Remote's mission is to create opportunity everywhere, empowering employers to find and hire the best talent, and enabling individuals to build financial and personal freedom.   Remote is a Global HR Platform that helps companies hire, manage, and pay their entire team â€” and more effectively compete in the modern global economy through our comprehensive set of core solutions including, HRIS, payroll, international employment, contractor management, and more.   Whether you're just starting your global journey, or looking to optimize your existing operations, sign up or book a demo - and see how Remote makes global HR simple.

    The version of the OpenAPI document: 0.1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from remote_python_sdk.pydantic.timeoff_entitlement_entitled import TimeoffEntitlementEntitled
from remote_python_sdk.pydantic.timeoff_entitlement_remaining import TimeoffEntitlementRemaining
from remote_python_sdk.pydantic.timeoff_entitlement_taken import TimeoffEntitlementTaken

class TimeoffEntitlement(BaseModel):
    # Indicates whether this entitlement can expire.  When `false`, `expiry_date` will be `nil`. 
    can_expire: bool = Field(alias='can_expire')

    entitled: TimeoffEntitlementEntitled = Field(alias='entitled')

    # Indicates the date this entitlement expires and is no longer counted towards the total time off entitlement for the employment.  When this entitlement doesn't expire, `expiry_date` will be set to `nil`. Use the `can_expire` parameter to determine whether an entitlement can expire or not. 
    expiry_date: typing.Optional[date] = Field(alias='expiry_date')

    name: typing.Optional[str] = Field(alias='name')

    remaining: TimeoffEntitlementRemaining = Field(alias='remaining')

    taken: TimeoffEntitlementTaken = Field(alias='taken')

    # Indicates the type of the time off entitlement.  `annual_paid_timeoff` entitlements are calculated from the employment's contract. All other time off entitlements are granted by the employer or automatically by the country of employment. 
    type: Literal["carryover_pto", "additional_pto", "transfer_pto", "annual_paid_timeoff"] = Field(alias='type')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
