# coding: utf-8

"""
    Remote API

    Talent is everywhere. Opportunity is not. Remote's mission is to create opportunity everywhere, empowering employers to find and hire the best talent, and enabling individuals to build financial and personal freedom.   Remote is a Global HR Platform that helps companies hire, manage, and pay their entire team â€” and more effectively compete in the modern global economy through our comprehensive set of core solutions including, HRIS, payroll, international employment, contractor management, and more.   Whether you're just starting your global journey, or looking to optimize your existing operations, sign up or book a demo - and see how Remote makes global HR simple.

    The version of the OpenAPI document: 0.1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from remote_python_sdk.type.employment_full_params_basic_information import EmploymentFullParamsBasicInformation
from remote_python_sdk.type.employment_full_params_pricing_plan_details import EmploymentFullParamsPricingPlanDetails
from remote_python_sdk.type.full_params import FullParams
from remote_python_sdk.type.full_params_deprecated import FullParamsDeprecated

class RequiredEmploymentFullParams(TypedDict):
    country_code: str

    full_name: str

    job_title: str

    personal_email: str

class OptionalEmploymentFullParams(TypedDict, total=False):
    address_details: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    administrative_details: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    bank_account_details: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    basic_information: EmploymentFullParamsBasicInformation

    billing_address_details: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    company_id: str

    contract_details: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    department_id: str

    emergency_contact_details: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    manager: str

    personal_details: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    pricing_plan_details: EmploymentFullParamsPricingPlanDetails

    provisional_start_date: str

class EmploymentFullParams(RequiredEmploymentFullParams, OptionalEmploymentFullParams):
    pass
EmploymentFullParams = typing.Union[FullParamsDeprecated,FullParams]
